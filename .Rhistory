matrix(c(-7,-1,9,-8,5,-2,0,1,12,-4,2,-12,-5,1,-2,-4,-3,4,-7,-8,13,11,1,7),nrow=6,byrow =T)
x
q1 = mean(ests)/sum(m)
q2 = sqrt(var(ests)/10)/sum(m)
q1
q2
rm(list=ls())
email <- read.csv("Desktop/EmailSurvey.csv")
tapply(email$Income, email$AgeGrp, mean,na.rm=TRUE)
tapply(email$Income, email$AgeGrp, sd,na.rm=TRUE)
@wt_c=rserve_eval('
@y_c=rserve_eval('
wt.c <- table(age)/300
x=144
p=0.13
round((x/500-(0.4)*(0.5))/0.6, 2)
round((1/0.6)*sqrt((x/500)*(1-x/500)/500), 2)
round((r.app-0.1)/0.8,2)
r = (0.2)(0.5)+(0.8) (( p(0.7)+(1-p)(0))
round((x/500-(0.4)*(0.5))/0.6, 2)
round((1/0.6)*sqrt((x/500)*(1-x/500)/500), 2)
round((r-0.1)/0.8,2)
r = (0.2)*(0.5)+(0.8)*(( p(0.7)+(1-p)(0))
r =(0.2)*(0.5)+(0.8)*( p*(0.7)+(1-p)*(0))
round((x/500-(0.4)*(0.5))/0.6, 2)
r =(0.2)*(0.5)+(0.8)*( p*(0.7)+(1-p)*(0))
r
round((r-0.1)/0.8,2)
p2.hat <- 23/121
400/p2.hat
second <- 400*(1/p2.hat)^2*sqrt(p2.hat*(1-p2.hat)/121)
second
p2.hat <- 23/121
chisqstat<-function(z){
+ xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum))/sum(obs) + sum((obs-xpc)^2/хрс)
+ }
chisqstat<-function(z){
+ obs<-matrix(c(23,121-23,400-23,2),2,2)
+ xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum))/sum(obs) + sum((obs-xpc)^2/хрс)
+ }
chisqstat<-function(z){
+ obs<-matrix(c(23,121-23,400-23,2),2,2)
+ xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum))/sum(obs) + sum((obs-xpc)^2/хрс)
+ }
chisqstat<-function(z){
+ obs<-matrix(c(23,121-23,400-23,2),2,2)
+ xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum))/sum(obs) + sum((obs-xpc)^2/хрс)
+ }
chisqstat<-function(z){
+ obs<-matrix(c(23,121-23,400-23,2),2,2)
+ xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum)))/sum(obs)
+ sum((obs-xpc)^2/хрс)
+ }
chisqstat<-function(z){
+ obs<-matrix(c(23,121-23,400-23,2),2,2)
+ xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum)))/sum(obs)
+ sum((obs-xpc)^2/хрс)}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-O:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
zval<- O:round(400/p2.hat+5*se)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
z.0 <-min(zval[chival <3.84])
rm(list=ls())
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,2),2,2)
xpc<-(apply(obs, 1,sum)%*%t(apply(obs, 2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
chival <-lapply(zval, chisqstat)
rm(list=ls())
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,2),2,2)
xpc<-(apply(obs,1,sum)%>%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
z.0 <-min(zval[chival <3.84])
rm(list=ls())
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%>%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
z.0 <-min(zval[chival<3.84])
z.1 <-max(zval[chival< 3.84])
C(400+121-23+z.0,400+121-23+z.1)
rm(list=ls())
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
z.0 <-min(zval[chival<3.84])
z.1 <-max(zval[chival< 3.84])
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%>%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%>%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
z.0 <-min(zval[chival<3.84])
z.1 <-max(zval[chival< 3.84])
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%>%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
z.0 <-min(zval[chival<3.84])
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
rm(list=ls())
p2.hat <- 23/121
chisqstat<-function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
obs<-matrix(c(23,121-23,400-23,z),2,2)
chisqstat<- function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
chisqstat
chival <-lapply(zval, chisqstat)
rm(list=ls())
p2.hat <- 23/121
chisqstat<- function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/хрс)
}
se<-400*(1/p2.hat)^2*sqrt(p2.hat* (1-p2.hat)/121)
zval<-0:round(400/p2.hat+5*se)
chival <-lapply(zval, chisqstat)
rm(list=ls())
car <- read.csv("Desktop/CarData.csv")
View(car)
50*mean(car$Num.Cars)
50*sgrt((1-6/50)*(sd(car$Num.Cars)^2)/6)
50*sqrt((1-6/50)*(sd(car$Num.Cars)^2)/6)
mean(car$Num.Cars)/mean(car$Num.Hshlds)
e<-car$Num.Cars-(mean(car$Num.Cars)/mean(car$Num.Hshlds))*car$Num.Hshlds
(1/mean(car$Num.Hshlds))*sqrt((1-6/50)*var(e)/6)
5068*(mean(car$Num.Cars)/mean(car$Num.Hshlds))
5067*(1/mean(car$Num.Hshlds))*sqrt((1-6/50)*var(e)/6)
50*sqrt((1-6/50)*(sd(car$Num.Cars)^2)/6)
50*sqrt((1-10/50)*(sd(car$Num.Cars)^2)/10)
(1/mean(car$Num.Hshlds))*sqrt((1-10/50)*var(e)/10)
5067*(1/mean(car$Num.Hshlds))*sqrt((1-10/50)*var(e)/10)
p_hat<-23/121
se<-400*(1/p_hat)^2*sqrt(p_hat*(1-p_hat)/121)
se
chisqstat <- function(z){
obs<-matrix(c(23,121-23,400-23,z),2,2)
xpc<-(apply(obs,1,sum)%*%t(apply(obs,2,sum)))/sum(obs)
sum((obs-xpc)^2/xpc)
}
zval<-0:round(400/p_hat+5*se)
chival<-lapply(zval,chisqstat)
z.0<-min(zval[chival<3.84])
z.1<-max(zval[chival<3.84])
z.0
z.1
c(400+121-23+z.0,400+121-23+z.1)
#Question 1
#Fair Sampling
data <- read.csv("Desktop/cars.csv", header = T)
sum(data$cars) # true value we want to estimate
rm(list=ls())
#Question 1
#Fair Sampling
data <- read.csv("Desktop/cars.csv", header = T)
sum(data$cars) # true value we want to estimate
N <- length(unique(data$county)) # number of clusters
m <- tapply(data$cars,data$county,length) # cluster size
# first stage
n.fair <- 20
set.seed(30)
county.sample <- sample(unique(data$county), n.fair, replace=T)
# second stage
t.hat <- rep(NA, n.fair)
for(i in 1: length(county.sample)) {
places <- which(data$county == county.sample[i])
r<- round(2/3 * length(places))
sample.index <- sample(1:length(places), size=r, replace=F)
t.hat[i] <- (length(places)) * mean(data$cars[places[sample.index]])
}
total <- t.hat / (1/N)
c(mean(total), sqrt(var(total)/n.fair))
#PPS sampling
# 1st stage
n.pps <- 20
set.seed(30)
county.smp <- sample(unique(data$county), size = n.pps, prob = m/sum(m), replace = T)
county.smp
# 2nd stage
t.hat <- rep(NA, n.pps)
for (i in 1:n.pps) {
places <- which(data$county == county.smp[i])
r <- round(length(places) * 2/3)
place.smp <- sample(1: length(places), size=r, replace=F) ## size = r
t.hat[i] <- (length(places)) * mean(data$cars[places[place.smp]])
}
ests.sep <- t.hat/ (m[as.character(county.smp)] / sum(m))
c(mean(ests.sep), sqrt(var(ests.sep)/n.pps))
#Question 2
data <- read.csv("Desktop/nonresponse.csv", sep="")
sum(is.na(data$cars)) ## number of observations with missing car values
N <- length(unique(data$county)) # number of clusters
m <- tapply(data$cars,data$county,length) # cluster size
# 1st stage
n.pps <- 20
#Question 2
data <- read.csv("Desktop/nonresponse.csv", sep="",header = T)
sum(is.na(data$cars)) ## number of observations with missing car values
N <- length(unique(data$county)) # number of clusters
m <- tapply(data$cars,data$county,length) # cluster size
# 1st stage
n.pps <- 20
set.seed(30)
county.smp <- sample(unique(data$county), size = n.pps, prob = m/sum(m), replace = T)
county.smp
# 2nd stage
t.hat <- rep(NA, n.pps)
for (i in 1:n.pps) {
places <- which(data$county == county.smp[i])
r <- round(length(places) * 2/3)
place.smp <- sample(1: length(places), size=r, replace=F)
t.hat[i] <- (length(places)) * mean(data$cars[places[place.smp]], na.rm=TRUE)
}
ests.sep <- t.hat/ (m[as.character(county.smp)] / sum(m))
c(mean(ests.sep), sqrt(var(ests.sep)/n.pps))
rm(list=ls())
#Question 1
#Fair Sampling
data <- read.csv("Desktop/cars.csv", header = T)
sum(data$cars) # true value we want to estimate
N <- length(unique(data$county)) # number of clusters
m <- tapply(data$cars,data$county,length) # cluster size
# first stage
n.fair <- 20
set.seed(30)
county.sample <- sample(unique(data$county), n.fair, replace=T)
# second stage
t.hat <- rep(NA, n.fair)
for(i in 1: length(county.sample)) {
places <- which(data$county == county.sample[i])
r<- round(2/3 * length(places))
sample.index <- sample(1:length(places), size=r, replace=F)
t.hat[i] <- (length(places)) * mean(data$cars[places[sample.index]])
}
total <- t.hat / (1/N)
c(mean(total), sqrt(var(total)/n.fair))
#PPS sampling
# 1st stage
n.pps <- 20
set.seed(30)
county.smp <- sample(unique(data$county), size = n.pps, prob = m/sum(m), replace = T)
county.smp
# 2nd stage
t.hat <- rep(NA, n.pps)
for (i in 1:n.pps) {
places <- which(data$county == county.smp[i])
r <- round(length(places) * 2/3)
place.smp <- sample(1: length(places), size=r, replace=F) ## size = r
t.hat[i] <- (length(places)) * mean(data$cars[places[place.smp]])
}
ests.sep <- t.hat/ (m[as.character(county.smp)] / sum(m))
c(mean(ests.sep), sqrt(var(ests.sep)/n.pps))
#Question 2
data <- read.csv("Desktop/nonresponse.csv", sep="",header = T)
sum(is.na(data$cars)) ## number of observations with missing car values
N <- length(unique(data$county)) # number of clusters
m <- tapply(data$cars,data$county,length) # cluster size
# 1st stage
n.pps <- 20
set.seed(30)
county.smp <- sample(unique(data$county), size = n.pps, prob = m/sum(m), replace = T)
county.smp
# 2nd stage
t.hat <- rep(NA, n.pps)
for (i in 1:n.pps) {
places <- which(data$county == county.smp[i])
r <- round(length(places) * 2/3)
place.smp <- sample(1: length(places), size=r, replace=F)
t.hat[i] <- (length(places)) * mean(data$cars[places[place.smp]], na.rm=TRUE)
}
ests.sep <- t.hat/ (m[as.character(county.smp)] / sum(m))
c(mean(ests.sep), sqrt(var(ests.sep)/n.pps))
'''{r}
R.version
'''
````
```
R.version
rm(list=ls())
R.version
R.version
R.version
#install.packages("fivethirtyeight")
library(fivethirtyeight)
head(bad_drivers)
library(ggplot2)
ggplot(data = bad_drivers, aes(x = num_drivers, y = losses)) +
geom_point()
getwd()
R.version
#| message: false
#| warning: false
library(tidyverse)
library(MASS)
head(painters)
painters_long <- painters |>
pivot_longer(cols = Composition:Expression,
names_to = "Skill",
values_to = "Score")
ggplot(painters_long,aes(x = reorder(Skill, -Score, median), y = Score)) +
geom_boxplot() +
labs(x = NULL) +
theme_grey(16)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> fillter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state"))
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> fillter(level_of_study_name =="undergrad";
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> fillter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) %>%
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> fillter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) |>
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> fillter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) >|
#| message: false
#| warning: false
library(tidyverse)
library(MASS)
head(painters)
painters_long <- painters |>
pivot_longer(cols = Composition:Expression,
names_to = "Skill",
values_to = "Score")
ggplot(painters_long,aes(x = reorder(Skill, -Score, median), y = Score)) +
geom_boxplot() +
labs(x = NULL) +
theme_grey(16)
painters_long <- painters |>
filter(School == "A") |>
rownames_to_column("Artist") |>
pivot_longer(cols = Composition:Expression,
names_to = "Skill",
values_to = "Score")
head(painters_long)
ggplot(painters_long, aes(x = Score, y = reorder(Artist, Score, mean), color = Skill)) +
geom_point(size = 3) +
labs(title = "Scores for School A Painters", y = "Artist", x = "Score") +
theme_linedraw(base_size = 16)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |>
filter(level_of_study == "undergrad",
tuition_type_name %in% c("in_state", "out_of_state")) |>
select(unitid, tuition_type_name, tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) |>
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) |>
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(ggridges)
ggplot(df, aes(x = tuition_type_name, y = tuition_fees_ft)) +
geom_boxplot(fill = "lightblue", alpha = 0.7, outlier.color = "purple") +
labs(title = "Comparison of In-State vs Out-of-State Tuition",
x = "Tuition Type", y = "Tuition Fees (USD)") +
theme_minimal(base_size = 14)
head(df)
ggplot(df, aes(x = tuition_type_name, y = tuition_fees_ft)) +
geom_boxplot(fill = "lightblue", alpha = 0.7, outlier.color = "purple") +
labs(title = "Comparison of In-State vs Out-of-State Tuition",
x = "Tuition Type", y = "Tuition Fees (USD)") +
theme_minimal(base_size = 16)
head(df)
ggplot(df, aes(x = tuition_type_name, y = tuition_fees_ft)) +
geom_boxplot(alpha = 0.6) +
geom_jitter(width = 0.2, alpha = 0.5, color = "blue") +
labs(title = "Comparison of In-State vs Out-of-State Tuition",
x = "Tuition Type", y = "Tuition Fees (USD)") +
theme_minimal(base_size = 14)
ggplot(df, aes(x = tuition_type_name, y = tuition_fees_ft)) +
geom_boxplot(alpha = 0.6) +
geom_jitter(width = 0.3, alpha = 0.5, color = "blue") +
labs(title = "Comparison of In-State vs Out-of-State Tuition",
x = "Tuition Type", y = "Tuition Fees (USD)") +
theme_minimal(base_size = 14)
ggplot(df, aes(x = tuition_type_name, y = tuition_fees_ft)) +
geom_boxplot(alpha = 0.6) +
geom_jitter(width = 0.3, alpha = 0.5, color = "lightblue") +
labs(title = "Comparison of In-State vs Out-of-State Tuition",
x = "Tuition Type", y = "Tuition Fees (USD)") +
theme_minimal(base_size = 14)
ggplot(df, aes(x = tuition_fees_ft, y = tuition_type_name)) +
geom_density_ridges(fill = "lightblue", alpha = 0.5, rel_min_height = 0.01) +
labs(title = "Distribution of In-State vs Out-of-State Tuition",
x = "Tuition Fees (USD)", y = "Tuition Type") +
theme_minimal(base_size = 16)
install.packages("ggridges")
library(ggridges)
ggplot(df, aes(x = tuition_fees_ft, y = tuition_type_name)) +
geom_density_ridges(fill = "lightblue", alpha = 0.5, rel_min_height = 0.01) +
labs(title = "Distribution of In-State vs Out-of-State Tuition",
x = "Tuition Fees (USD)", y = "Tuition Type") +
theme_minimal(base_size = 16)
ggplot(df, aes(x = tuition_type_name, y = tuition_fees_ft)) +
geom_boxplot(alpha = 0.6) +
geom_jitter(width = 0.3, alpha = 0.5, color = "lightblue") +
labs(title = "Comparison of In-State vs Out-of-State Tuition",
x = "Tuition Type", y = "Tuition Fees (USD)") +
theme_minimal(base_size = 16)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study =="undergrad",
(tuition_type == "in_state")|
(tuition_type == "out_of_state")) |>
dplyr::select(unitid,tuition_type,tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type == "in_state")|
(tuition_type == "out_of_state")) |>
dplyr::select(unitid,tuition_type,tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) |>
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(tidyverse)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) |>
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(readr)
df <- read_csv("tuition.csv")
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state")) |>
dplyr::select(unitid,tuition_type_name,tuition_fees_ft)
library(readr)
df <- read_csv("tuition.csv")
head(df)
df <- df |> filter(level_of_study_name =="undergrad",
(tuition_type_name == "in_state")|
(tuition_type_name == "out_of_state"))|>
dplyr::select(unitid,tuition_type,tuition_fees_ft)
head(df)
